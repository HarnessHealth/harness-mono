[tool.poetry]
name = "harness"
version = "0.1.0"
description = "Harness - Veterinary Clinical AI Platform with Ask and Diagnose Services"
authors = ["Harness Team"]
readme = "README.md"
packages = [{include = "backend"}]

[tool.poetry.dependencies]
python = ">=3.9,<3.13"
fastapi = "^0.111.0"
uvicorn = {extras = ["standard"], version = "^0.30.1"}
pydantic = "^2.8.0"
pydantic-settings = "^2.3.0"
sqlalchemy = "^1.4.36"
alembic = "^1.13.2"
asyncpg = "^0.29.0"
redis = "^5.0.7"
celery = {extras = ["redis"], version = "^5.4.0"}
httpx = "^0.27.0"
boto3 = "^1.34.140"
weaviate-client = "^4.6.5"
sentence-transformers = "^3.0.1"
torch = "^2.3.1"
transformers = "^4.42.3"
numpy = "^1.26.4"
pandas = "^2.2.2"
scikit-learn = "^1.5.1"
mlflow = "^2.14.2"
prometheus-client = "^0.20.0"
structlog = "^24.2.0"
python-jose = {extras = ["cryptography"], version = "^3.3.0"}
python-multipart = "^0.0.9"
strawberry-graphql = {extras = ["fastapi"], version = "^0.244.0"}
aiofiles = "^24.1.0"
tenacity = "^8.5.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.2.2"
pytest-asyncio = "^0.23.7"
pytest-cov = "^5.0.0"
pytest-mock = "^3.14.0"
black = "^24.4.2"
ruff = "^0.5.1"
mypy = "^1.10.1"
pre-commit = "^3.7.1"
notebook = "^7.2.1"

[tool.poetry.group.data-pipeline.dependencies]
apache-airflow = "^2.9.3"
apache-airflow-providers-amazon = "^8.25.0"
apache-airflow-providers-celery = "^3.7.1"
grobid-client-python = "^0.0.7"
beautifulsoup4 = "^4.12.3"
lxml = "^5.2.2"
pypdf = "^4.2.0"
langchain = "^0.2.7"
langchain-community = "^0.2.7"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'

[tool.ruff]
line-length = 88
target-version = "py311"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = ["E501", "B008", "B905"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["backend"]
branch = true
omit = ["*/tests/*", "*/migrations/*"]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
