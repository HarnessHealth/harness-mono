version: 0.2

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - REPOSITORY_URI=$ECR_REPOSITORY_URI
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
      - echo Build started on `date`
      
  build:
    commands:
      - echo Building the Docker image...
      - |
        docker buildx create --use --driver docker-container
        docker buildx build \
          --platform linux/amd64 \
          --cache-from type=registry,ref=$REPOSITORY_URI:buildcache \
          --cache-to type=registry,ref=$REPOSITORY_URI:buildcache,mode=max \
          --tag $REPOSITORY_URI:$IMAGE_TAG \
          --tag $REPOSITORY_URI:latest \
          --target production \
          --push \
          -f infrastructure/docker/Dockerfile.backend.optimized .
      
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushed $REPOSITORY_URI:$IMAGE_TAG
      - |
        # Update ECS service with new image
        if [ "$DEPLOY_TO_ECS" = "true" ]; then
          aws ecs update-service \
            --cluster harness-cluster-$ENVIRONMENT \
            --service harness-api-service-$ENVIRONMENT \
            --force-new-deployment
        fi

cache:
  paths:
    - '/root/.cache/pip/**/*'
    - '/root/.cache/poetry/**/*'